# Project Configuration

## Project Details
- Name: GeradorWP
- Language: Python
- Framework: CrewAI
- Author: Descomplicar - Agência de Aceleração Digital
- Website: https://descomplicar.pt

## Code Style
- Indentation: 4 spaces
- Max line length: 120 characters
- Naming conventions:
  - Variables: camelCase
  - Classes: PascalCase
  - Constants: UPPER_SNAKE_CASE
  - Functions: snake_case

## File Patterns
- Python files: *.py
- Configuration files: *.yml, *.yaml, *.json
- Documentation: *.md
- Environment: .env

## Ignore Patterns
- __pycache__/
- *.pyc
- .env
- venv/
- .git/
- .vscode/
- .idea/

## Auto-formatting
- Enabled for Python files
- Use black for formatting
- Use isort for import sorting

## Linting
- Enabled for Python files
- Use flake8 for linting
- Use mypy for type checking

## Testing
- Use pytest for testing
- Test files should be named test_*.py
- Test functions should be named test_*

## AI Assistant Features
- Code completion
- Code refactoring
- Documentation generation
- Bug detection
- Performance optimization

# Plano de Trabalho

## 1. Arquitetura do Sistema

### 1.1 Agentes (src/agents/)
- **ResearcherAgent**: Responsável por pesquisar e coletar informações
  - Pesquisa na web
  - Análise de conteúdo existente
  - Identificação de tendências
  - Coleta de dados estatísticos

- **WriterAgent**: Responsável por criar o conteúdo
  - Estruturação do artigo
  - Escrita do conteúdo
  - Otimização SEO
  - Revisão e edição

- **PublisherAgent**: Responsável por publicar no WordPress
  - Formatação do conteúdo
  - Upload de imagens
  - Publicação via XML-RPC
  - Verificação de sucesso

### 1.2 Tarefas (src/tasks/)
- **ResearchTask**: Define objetivos e critérios de pesquisa
- **WritingTask**: Define requisitos e padrões de escrita
- **PublishingTask**: Define parâmetros de publicação

### 1.3 Utilitários (src/utils/)
- Cache de resultados
- Logging e monitoramento
- Tratamento de erros
- Validação de dados

## 2. Fluxo de Trabalho

1. **Entrada**
   - Tópico principal
   - Palavras-chave
   - Requisitos específicos
   - Configurações de SEO

2. **Processo**
   ```
   Tópico → ResearchTask → WriterTask → PublishingTask → WordPress
   ```

3. **Saída**
   - Artigo publicado
   - Relatório de performance
   - Métricas de SEO
   - Logs de execução

## 3. Implementação

### Fase 1: Configuração Base
- [X] Ambiente de desenvolvimento
- [X] Estrutura de diretórios
- [ ] Configuração de ferramentas
- [ ] Documentação inicial

### Fase 2: Implementação dos Agentes
- [ ] ResearcherAgent
  - [ ] Integração com APIs de pesquisa
  - [ ] Sistema de cache
  - [ ] Análise de dados

- [ ] WriterAgent
  - [ ] Geração de conteúdo
  - [ ] Otimização SEO
  - [ ] Revisão automática

- [ ] PublisherAgent
  - [ ] Integração WordPress
  - [ ] Upload de mídia
  - [ ] Verificação de publicação

### Fase 3: Sistema de Tarefas
- [ ] ResearchTask
  - [ ] Definição de objetivos
  - [ ] Critérios de qualidade
  - [ ] Validação de dados

- [ ] WritingTask
  - [ ] Estrutura de conteúdo
  - [ ] Padrões de escrita
  - [ ] Revisão de qualidade

- [ ] PublishingTask
  - [ ] Formatação final
  - [ ] Otimização de mídia
  - [ ] Verificação de publicação

### Fase 4: Integração e Testes
- [ ] Testes unitários
- [ ] Testes de integração
- [ ] Testes de performance
- [ ] Documentação final

## 4. Métricas de Sucesso
- Tempo de geração de conteúdo
- Qualidade do conteúdo gerado
- Performance SEO
- Taxa de sucesso na publicação
- Satisfação do utilizador final

# Scratchpad

## Current Task: Configuração do Projeto GeradorWP

### Objetivo
Configurar o ambiente de desenvolvimento para o projeto GeradorWP, que utiliza CrewAI para gerar conteúdo para WordPress.

### Progresso
[X] Instalar cookiecutter e template devin.cursorrules
[X] Configurar .cursorrules com as regras específicas do projeto
[X] Configurar ambiente virtual e dependências
[X] Configurar estrutura de diretórios
[ ] Configurar ferramentas de desenvolvimento
[ ] Configurar integração contínua
[ ] Configurar documentação

### Próximos Passos
1. Configurar as ferramentas de desenvolvimento (linting, formatação, etc.)
2. Configurar a integração contínua
3. Configurar a documentação do projeto

# Checklist Detalhado

## Fase 1: Configuração Base
### 1.1 Estrutura de Diretórios
- [ ] Criar diretório `src/agents`
- [ ] Criar diretório `src/tasks`
- [ ] Criar diretório `src/utils`
- [ ] Criar diretório `src/config`
- [ ] Criar diretório `tests`
- [ ] Criar diretório `docs`

### 1.2 Ambiente de Desenvolvimento
- [ ] Configurar ambiente virtual
- [ ] Instalar dependências base
- [ ] Configurar black e isort
- [ ] Configurar flake8
- [ ] Configurar mypy
- [ ] Configurar pytest

### 1.3 Logging e Cache
- [ ] Implementar sistema de logging
- [ ] Configurar níveis de log
- [ ] Implementar sistema de cache
- [ ] Configurar TTL do cache
- [ ] Implementar limpeza automática

## Fase 2: Implementação dos Agentes
### 2.1 ResearcherAgent
- [ ] Implementar pesquisa web
- [ ] Implementar análise de conteúdo
- [ ] Implementar identificação de tendências
- [ ] Implementar coleta de dados
- [ ] Implementar validação de dados
- [ ] Implementar cache de resultados

### 2.2 WriterAgent
- [ ] Implementar estruturação de artigo
- [ ] Implementar geração de conteúdo
- [ ] Implementar otimização SEO
- [ ] Implementar revisão automática
- [ ] Implementar validação de qualidade
- [ ] Implementar sugestões de melhoria

### 2.3 PublisherAgent
- [ ] Implementar formatação de conteúdo
- [ ] Implementar upload de imagens
- [ ] Implementar publicação WordPress
- [ ] Implementar verificação de sucesso
- [ ] Implementar tratamento de erros
- [ ] Implementar retry mechanism

## Fase 3: Integração e Testes
### 3.1 Testes Unitários
- [ ] Testes para ResearcherAgent
- [ ] Testes para WriterAgent
- [ ] Testes para PublisherAgent
- [ ] Testes para utilitários
- [ ] Testes para configurações
- [ ] Testes para cache

### 3.2 Testes de Integração
- [ ] Testes de fluxo completo
- [ ] Testes de performance
- [ ] Testes de carga
- [ ] Testes de segurança
- [ ] Testes de recuperação
- [ ] Testes de compatibilidade

### 3.3 Documentação
- [ ] Documentação técnica
- [ ] Documentação de API
- [ ] Guia de instalação
- [ ] Guia de utilização
- [ ] Exemplos de código
- [ ] Troubleshooting

## Fase 4: Lançamento e Monitorização
### 4.1 Preparação
- [ ] Revisão de segurança
- [ ] Otimização de performance
- [ ] Backup de dados
- [ ] Plano de rollback
- [ ] Monitorização inicial
- [ ] Alertas configurados

### 4.2 Lançamento
- [ ] Deploy em staging
- [ ] Testes em produção
- [ ] Deploy em produção
- [ ] Verificação pós-deploy
- [ ] Monitorização inicial
- [ ] Feedback inicial

### 4.3 Manutenção
- [ ] Monitorização contínua
- [ ] Análise de logs
- [ ] Otimizações
- [ ] Atualizações
- [ ] Backup regular
- [ ] Relatórios de performance